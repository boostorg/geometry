[/ Generated by doxygen_xml2qbk, don't change, it will be overwritten automatically]
[/ Generated from ..\doxygen_output\xml\group__centroid.xml]
[section:centroid_3 centroid (3)]

Calculate centroid using a specified strategy. 

[heading Synopsis]
``template<typename Geometry, typename Point, typename Strategy>
void centroid (Geometry const &geometry, Point &c, Strategy const &strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry concept ] [geometry] [A model of the specified concept ]]
[[Point &] [Any type fulfilling a Point concept ] [c] [the calculated centroid will be assigned to this point reference ]]
[[Strategy const &] [A type fulfilling a CentroidStrategy concept ] [strategy] [A strategy to calculate the centroid ]]
]


[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/centroid.hpp>`

[heading Behavior]
[table
[[Case] [Behavior] ]
[[__0dim__][Calculates centroid]]
[[__1dim__][Calculates centroid]]
[[__2dim__][Calculates centroid]]
[[__empty__][Throws a centroid_exception]]
]


[heading Complexity]
Linear


[endsect]

[section:centroid_2 centroid (2)]

Calculate centroid. 

[heading Synopsis]
``template<typename Geometry, typename Point>
void centroid (Geometry const &geometry, Point &c)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry concept ] [geometry] [A model of the specified concept ]]
[[Point &] [Any type fulfilling a Point concept ] [c] [the calculated centroid will be assigned to this point reference]]
]


[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/centroid.hpp>`

[heading Behavior]
[table
[[Case] [Behavior] ]
[[__0dim__][Calculates centroid]]
[[__1dim__][Calculates centroid]]
[[__2dim__][Calculates centroid]]
[[__empty__][Throws a centroid_exception]]
]


[heading Complexity]
Linear


[endsect]

[section:make_centroid_1 make_centroid (1)]

Calculate and return centroid. 

[heading Synopsis]
``template<typename Point, typename Geometry>
Point make_centroid (Geometry const &geometry)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry concept ] [geometry] [A model of the specified concept ]]
]


[heading Returns]
The calculated centroid 

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/centroid.hpp>`

[heading Behavior]
[table
[[Case] [Behavior] ]
[[__0dim__][Calculates centroid]]
[[__1dim__][Calculates centroid]]
[[__2dim__][Calculates centroid]]
[[__empty__][Throws a centroid_exception]]
]


[heading Complexity]
Linear


[endsect]

[section:make_centroid_2 make_centroid (2)]

Calculate and return centroid, using a specified strategy. 

[heading Synopsis]
``template<typename Point, typename Geometry, typename Strategy>
Point make_centroid (Geometry const &geometry, Strategy const &strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry concept ] [geometry] [A model of the specified concept ]]
[[Strategy const &] [] [strategy] [Calculation strategy for centroid ]]
]


[heading Returns]
The calculated centroid 

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/centroid.hpp>`

[heading Behavior]
[table
[[Case] [Behavior] ]
[[__0dim__][Calculates centroid]]
[[__1dim__][Calculates centroid]]
[[__2dim__][Calculates centroid]]
[[__empty__][Throws a centroid_exception]]
]


[heading Complexity]
Linear


[endsect]

