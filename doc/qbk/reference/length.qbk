[/ Generated by doxygen_xml2qbk, don't change, it will be overwritten automatically]
[/ Generated from ..\doxygen_output\xml\group__length.xml]
[section:length_1 length]

Calculates the length of a geometry. 

[heading Description]
The version without a strategy takes the default distance-calculation-strategy to calculate distances between consecutive points of a geometry, summing them to the length of the geometry 

[heading Synopsis]
``template<typename Geometry>
length_result<Geometry>::type length (Geometry const &geometry)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
]


[heading Returns]
The calculated length

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/length.hpp>`

[heading Behavior]
[table
[[Case] [Behavior] ]
[[__0dim__][[qbk_ret 0]]]
[[__1dim__][[qbk_ret the length]]]
[[__2dim__][[qbk_ret 0]]]
]


[heading Complexity]
Linear


[endsect]

[section:length_2 length (with strategy)]

Calculates the length of a geometry using the specified strategy. 

[heading Synopsis]
``template<typename Geometry, typename Strategy>
length_result<Geometry>::type length (Geometry const &geometry, Strategy const &strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [A model of the specified concept ]]
[[Strategy const &] [Any type fulfilling a distance Strategy Concept ] [strategy] [The strategy which will be used for distance calculations ]]
]


[heading Returns]
The calculated length

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/length.hpp>`


[endsect]

