[/============================================================================
  Boost.Geometry (aka GGL, Generic Geometry Library)

  Copyright (c) 2009-2011 Barend Gehrels, Geodan, Amsterdam, the Netherlands.
  Copyright (c) 2009-2011 Mateusz Loskot (mateusz@loskot.net)
  Copyright (c) 2009-2011 Bruno Lalande, Paris, France.

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk, don't change, it will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__simplify.xml]
[section:simplify_3 simplify]

Simplify a geometry. 

[heading Synopsis]
``template<typename Geometry, typename Distance>
void simplify (Geometry const &geometry, Geometry &out, Distance const &max_distance)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [input geometry, to be simplified ]]
[[Geometry &] [Any type fulfilling a Geometry Concept ] [out] [output geometry, simplified version of the input geometry ]]
[[Distance const &] [Numerical type (int, double, ttmath, ...) ] [max_distance] [distance (in units of input coordinates) of a vertex to other segments to be removed]]
]


[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/simplify.hpp>`


[endsect]

[section:simplify_4_with_strategy simplify (with strategy)]

Simplify a geometry using a specified strategy. 

[heading Synopsis]
``template<typename Geometry, typename Distance, typename Strategy>
void simplify (Geometry const &geometry, Geometry &out, Distance const &max_distance, Strategy const &strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Strategy const &] [A type fulfilling a SimplifyStrategy concept ] [strategy] [simplify strategy to be used for simplification, might include point-distance strategy]]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [input geometry, to be simplified ]]
[[Geometry &] [Any type fulfilling a Geometry Concept ] [out] [output geometry, simplified version of the input geometry ]]
[[Distance const &] [A numerical distance measure ] [max_distance] [distance (in units of input coordinates) of a vertex to other segments to be removed ]]
]


[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/simplify.hpp>`

[heading Image(s)]
[$svg_simplify_country.png]

[endsect]

[section:simplify_inserter_3 simplify_inserter]

Simplify a geometry, using an output iterator. 

[heading Synopsis]
``template<typename Geometry, typename OutputIterator, typename Distance>
void simplify_inserter (Geometry const &geometry, OutputIterator out, Distance const &max_distance)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [input geometry, to be simplified ]]
[[OutputIterator] [] [out] [output iterator, outputs all simplified points ]]
[[Distance const &] [] [max_distance] [distance (in units of input coordinates) of a vertex to other segments to be removed ]]
]


[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/simplify.hpp>`


[endsect]

[section:simplify_inserter_4_with_strategy simplify_inserter (with strategy)]

Simplify a geometry, using an output iterator and a specified strategy. 

[heading Synopsis]
``template<typename Geometry, typename OutputIterator, typename Distance, typename Strategy>
void simplify_inserter (Geometry const &geometry, OutputIterator out, Distance const &max_distance, Strategy const &strategy)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry const &] [Any type fulfilling a Geometry Concept ] [geometry] [input geometry, to be simplified ]]
[[OutputIterator] [] [out] [output iterator, outputs all simplified points ]]
[[Distance const &] [] [max_distance] [distance (in units of input coordinates) of a vertex to other segments to be removed ]]
[[Strategy const &] [] [strategy] [simplify strategy to be used for simplification, might include point-distance strategy ]]
]


[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/simplify.hpp>`

[heading Examples]
[simplify_inserter]


[endsect]

