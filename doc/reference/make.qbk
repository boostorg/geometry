[/ Generated by doxygen_xml2qbk, don't change, it will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__make.xml]
[section:make_3 make]

Make a geometry. 

[heading Synopsis]
``template<typename Geometry, typename T>
Geometry make (T const &c1, T const &c2, T const &c3)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry] [] [ - ] [Must be specified]]
[[T const &] [] [c1] []]
[[T const &] [] [c2] []]
[[T const &] [] [c3] []]
]


[heading Returns]
a 3D point 

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/make.hpp>`


[endsect]

[section:make_2 make]

Make a geometry. 

[heading Description]
the Generic Geometry Library uses concepts for all its geometries. Therefore it does not rely on constructors. The "make" functions are object generators creating geometries. There are overloads with two, three, four or six values, which are implemented depending on the geometry specified. 

[heading Synopsis]
``template<typename Geometry, typename T, >
Geometry make (T const &c1, T const &c2)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry] [] [ - ] [Must be specified]]
[[G] [the geometry type ] [ - ] [Must be specified]]
[[T const &] [the coordinate type ] [c1] []]
[[T const &] [the coordinate type ] [c2] []]
]


[heading Returns]
the geometry 

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/make.hpp>`


[endsect]

[section:make_inverse make_inverse]

Create a box with inverse infinite coordinates. 

[heading Description]
The make_inverse function initialize a 2D or 3D box with large coordinates, the min corner is very large, the max corner is very small 

[heading Synopsis]
``template<typename Geometry>
Geometry make_inverse ()``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry] [the geometry type ] [ - ] [Must be specified]]
]


[heading Returns]
the box 

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/make.hpp>`


[endsect]

[section:make_zero make_zero]

Create a geometry with "zero" coordinates. 

[heading Description]
The make_zero function initializes a 2D or 3D point or box with coordinates of zero 

[heading Synopsis]
``template<typename Geometry>
Geometry make_zero ()``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[Geometry] [the geometry type ] [ - ] [Must be specified]]
]


[heading Returns]
the geometry 

[heading Header]
Either

`#include <boost/geometry/geometry.hpp>`

Or

`#include <boost/geometry/algorithms/make.hpp>`


[endsect]

