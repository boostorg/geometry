TODO FOR PREVIEW4
  
* documentation
	
* JAM's
	-update



----------------------------



* from_wkt
	- harmonize with parse? MAYBE NEXT VERSION, NOT NOW
* parse:
	- make default parser calling atod / lexical_cast for convenience/consistency with dms parser MAYBE NEXT VERSION, NOT NOW


* projections:
	- param check without char LATER
	- there are warnings on "this->" in MSVC LATER
	- add "ellipse" structs -> can be shared by projections and by geographic distances LATER
	- map for init LATER

	

maybe

* cartesian_tag etc -> cs::cartesian_tag or tag::cartesian_tag (?)
* OGC
  - start_point
  - end_point
  
* assign/append
	- add latitude<>/long<> / dms<> ? they were in point_ll. Now in "util/graticule.hpp"
		-> PROBABLY DO THIS BY MAKING A FUNCTION AND ADDING dms_result -> more generic
	- what about box? You might wish a method assigning a corner to a box, not yet there. LATER
  


* make traits access consistent (DIM,TYPE) with index_access and radius_access
	the call are now, for access/index_access/radius_access
		return traits::access<P>::template get<D>(p);
		return traits::indexed_access<B, I, D>::get(b);
		return traits::radius_access<S, T, D>::get(s);
	the first is different and might be changed to:
		return traits::access<P, D>::get(p);
		
	Has no influence on the rest of the library, only the traits class(es)	
	
	
* exceptions more consistent / separate headers?, derive from boost?		

* bounding box trait?
	

* convex_hull:
	- multi*, LATER
	

EXAMPLES

? X0x_GMP with GNU MP

